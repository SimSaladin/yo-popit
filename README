PVL yo-popit
============

Requirements
------------

### streaming

- mpd (recent enough: with http streaming support)
- mpc (interacting with mpd from scripts)
- mplayer (to get the lengths of songs)
- vlc (rtsp stream)

### other operations

- sox (get-files.sh: remove silence)
- smbclient (get-files.sh: get files via samba)

Step 0: Setup
-------------

Setup parameters in file settings.

Start MPD with the provided config: `mpd mpdconf`.

Step 1: Fetch music from samba
------------------------------
   
      $ cd /opt/pvl-mpd/music
      $ mkdir K13 # Change me!
      $ cd K13
      $ smbclient -U<username> //netdisk/work <password>
      $ smb: \> prompt
      $ smb: \> cd YO-popit-K13 # Change me!
      $ smb: \> mget *
      $ smb: \> quit
      $ mpc update

Step 2: Construct the playlist
------------------------------

By streaming a track of silence we give clients time to connect before the music
stream.  There is a default 5min music/silence.ogg, which is added to the
beginning of playlists, and can be changed in settings.

Generate the playlist with `bin/generate_playlist.sh`:

      $ cd /opt/pvl-mpd
      $ bin/generate_playlist.sh --help
      $ ...
      $ generate_playlist.sh ./music --last final_countdown.flac

Step 3: Timing the stream
-------------------------

Timing the stream is done via cron. The script `bin/set_wake.sh PLAYLIST`
overwrites the crontab of the current user. Example: `bin/set_wake.sh
playlist.m3u`.

Step 4: Testing
---------------

Start streaming a playlist with `bin/start_stream.sh PLAYLIST`.  Test the stream
with `mplayer rtsp://HOST:PORT/stream.sdp`.  Default port is 8183.

Step 5: Clients
---------------

Clients must have:
a) Clocks synced (NTP)
b) Cron running
c) Mplayer2 available

To setup the stream set the two parameters in the `client_script.sh`, and run it
on every client. It will check points b and c, and set the appropriate cron job.
The cron job cleans self up when done.

An easy way to run the script on clients is to publish it on a HTTP server in
some URL, and then on every client just do

      $ wget $URL -O- | bash

Repeat the previous step for every client. Make sure that the stream works, and
that sound volume is good.

